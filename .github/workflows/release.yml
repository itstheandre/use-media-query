name: Release 🚀

on:
  pull_request:
    branches: master
  push:
    branches:
      - master

jobs:
  build_and_test:
    name: Build and Test
    if: "!contains(github.event.head_commit.message, 'skip ci')"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Get Yarn Cache Directory Path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - name: 💸  Cache node_modules
        uses: actions/cache@v2
        id: yarn-cache
        with:
            path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
            key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
            restore-keys: |
              ${{ runner.os }}-yarn-  
      - name: Setup NodeJS
        uses: actions/setup-node@v1
        with:
            node-version: "14.x"
      - name: Install Deps
        run: yarn install --frozen-lockfile
      - name: Link
        run:  yarn link
      - name: 🛠️ Build
        run: yarn build
      - name: 🧪 Test
        run:  yarn test --ci --coverage
      - name: 📦  ZIP Coverage
        if: github.event_name == 'push'
        run: |
          zip -r coverage.zip ./coverage
          zip -r build.zip ./dist
      - name: Upload Test Cov
        uses: actions/upload-artifact@v1
        with:
          name: code-coverage
          path: coverage
      - name: Upload Build assets
        if: github.event_name == 'push'
        uses: actions/upload-artifact@v1
        with:
            name: build
            path: dist
  release:
    if: github.event_name == 'push'
    needs: [build_and_test]
    name: Release Package 🎉🥳
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Setup NodeJS
        uses: actions/setup-node@v1
        with:
            node-version: "14.x"
      - name: Get Yarn Cache Directory Path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - name: 💰 Cache node_modules
        uses: actions/cache@v2
        id: yarn-cache
        with:
            path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
            key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
            restore-keys: |
              ${{ runner.os }}-yarn-
      - name: 🛠️ Build
        run: yarn build
      - name: 🧪 TEST
        run: yarn cov
      - name: 🆙Load Coverage Reports To CodeCov
        run: npx codecov
        env: 
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
      - name: 📦 Release to NPM
        run: npx semantic-release
        env:
          GITHUB_TOKEN: ${{ secrets.CUSTOM_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
      - name: Open Issue
        if: failure()
        run: |
          curl --request POST \
          --url https://api.github.com/repos/${{ github.repository }}/issues \
          --header 'authorization: Bearer ${{ secrets.CUSTOM_TOKEN }}' \
          --header 'content-type: application/json' \
          --data '{
            "title": "Automated issue for commit: ${{ github.sha }}",
            "body": "This issue was automatically created by the GitHub Action workflow **${{ github.workflow }}**. \n\n The commit hash was: _${{ github.sha }}_.",
            "assignees": ["${{ github.event.pull_request.user.login }}"]
            }'
